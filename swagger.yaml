openapi: 3.0.0
info:
  description: "This is a backend API for a used PS5, PS4, and XBox games exchange platform. Click the `Authorize` button below and enter the token recived from login or signup to access protected routes"
  version: 1.0.0
  title: Game Exchange Platfrom API
  contact:
    email: alexmasinde1992@gmail.com
  license:
    name: Apache 2.0
servers: 
  - url: http://localhost:5000/api
    description: Server for development environment
tags:
  - name: Users
    description: Authentication and user routes
  - name: Posts
    description: Create, read, update, and delete game posts
  - name: Comments
    description: Create, read, update, and delete game post comments 
  - name: Likes
    description: Like game post 
components: 
  schemas:
    Post:
      properties:
        gameTitle:
          type: string
          required: true
        genre: 
          type: string 
          required: true
        description: 
          type: string
          required: true
    User:
      properties:
        userName:
          type: string
          required: true
        email:
          type: string
          required: true
        password: 
          type: string
          required: true
  securitySchemes:
    bearerAuth:
      type: http
      scheme: Bearer
      bearerFormat: JWT
security:
  - bearerAuth: []
paths: 
    /users/: 
      post:
        tags:
        - Users
        summary: Create a new user 
        
        requestBody:
          required: true
          description: Takes new user details object. For successful signup, userName, password, and email all must be provided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'

        responses: 
          '201':
            description: New user succesfully created
          '400':
            description: Invalid user details
          '409':
            description: User already exists
          '500':
            description: Internal server error 
      


    /users/login:
      post:
        tags:
          - Users
        summary: Login into user account


        requestBody:
          required: true
          description: Signs user into their account. Takes a valid email and password
          content:
            application/json:
              schema:
                type: object
                properties:
                  email:
                    type: string
                    required: true
                  password:
                    type: string
                    required: true
        
        responses: 
          '200':
            description: Successful user login
          '400':
            description: Supplied wrong or invalid credentials
          '500':
            description: Internal server error 



    /users/displaypicture:
      post:
        tags: 
          - Users
        summary: Upload user profile picture

        requestBody:
          required: true
          description: Select profile picture 
          content: 
            multipart/form-data:
              schema:
                type: object
                properties:
                  displaypicture:
                    type: string
                    format: binary

        responses: 
            '200':
              description: Display picture changed succesfully 
            '400':
              description: Profile image not selected or wrong format
            '401':
              description: Authentication required 
            '403':
              description: Unauthorized operation 
            '500':
              description: Internal server error 
    


    /posts/allposts:
      get:
        tags:
          - Posts
        summary: Get all the game posts

        responses: 
            '200':
              description: Posts fetched succesfully 
            '500':
              description: Internal server error 

    /posts/: 
      post: 
        tags: 
          - Posts 
        summary: Create a game post

        requestBody:
          required: true
          description: Create a post of a game to be exchanged
          content: 
            multipart/form-data:
              schema:
                type: object
                properties:
                  gameTitle:
                    type: string
                  genre:
                    type: string
                  description:
                    type: string
                  gameimages:
                    type: array
                    items:
                      type: string
                      format: binary
        
        responses: 
          '201':
            description: New game post succesfully created
          '400':
            description: No post details supplied or wrong format
          '401':
            description: Authentication required
          '500':
            description: Internal server error


    /posts/{postId}:
      get: 
        tags:
          - Posts
        summary: Fetch a single post

        parameters:
          - in: path
            name: postId
            schema: 
              type: string
            required: true
            description: Id of the post that needs to be fetched
        
        responses: 
          '200':
            description: Post fetched succesfully
          '500':
            description: Internal server error
      

      patch:
        tags: 
          - Posts
        summary: Update game post details

        parameters:
          - in: path
            name: postId
            schema: 
              type: string
            required: true
            description: Id of the post that needs to be updated

        requestBody:
          required: true
          description: Update post with new details. Can be all or any of the main post details (gameTitle, genre, description)
          content:
            application/json:
              schema: 
                type: object 
                properties:
                  gameTitle: 
                    type: string 
                  genre: 
                    type: string
                  description:
                    type: string 
        
        responses: 
          '200':
            description: Post succesfully updated
          '400':
            description: No new post details supplied or wrong format
          '401':
            description: Authentication required
          '403':
            description: Unauthorized operation 
          '404':
            description: Post does not exist
          '500':
            description: Internal server error 
      
    
      delete: 
        tags:
          - Posts
        summary: Delete a game post 

        parameters:
          - in: path
            required: true
            name: postId
            schema: 
              type: string
            description: Id of game post to be deleted
        
        responses:
          '200':
            description: Post succesfully deleted
          '401':
            description: Authentication required
          '403':
            description: Operation not authorized
          '404':
            description: Post not found
          '500':
            description: Internal server error



    /posts/exchange/{postId}:
      patch:
        tags: 
          - Posts
        summary: Mark a game as already exchanged

        parameters:
          - in: path
            name: postId
            required: true
            description: Marks the game of the supplied ID as exchanged 
            schema:
              type: string 
            
        responses: 
          '200':
            description: Game succesfully marked as exchanged
          '401':
            description: Authentication required
          '403':
            description: Operation not authorized
          '404':
            description: Post not found
          '500':
            description: Internal server error

    /like/:
      post:
        tags: 
          - Likes
        summary: Like and unlike a comment or post 

        requestBody:
          required: true
          description: Like a comment or post based on the modelId and modelType in the request 
          content:
            application/json:
              schema:
                type: object
                properties:
                  modelId: 
                    type: string
                  modelType:
                    type: string 
          
        responses:
          '200':
            description: Comment succesfully deleted
          '401':
            description: Authentication required
          '403':
            description: Operation not authorized
          '404':
            description: Comment not found
          '500':
            description: Internal server error

    /comments/{postId}:
      post: 
        tags:
          - Comments
        summary: Comment on a game post 

        parameters:
          - in: path
            name: postId
            required: true
            description: Id for post to be commented on 
            schema:
              type: string 

        requestBody:
          required: true
          description: Add a comment about to a post
          content:
            application/json:
              schema: 
                type: object
                properties:
                  commentText:
                    type: string

        responses: 
          '201':
            description: Comment succesfully created
          '400':
            description: No comment supplied or wrong format 
          '401':
            description: Authentication required
          '500':
            description: Internal server error

    /comments/{commentId}:
      delete:
        tags:
          - Comments
        summary: Delete a comment

        parameters:
          - in: path
            name: commentId
            required: true
            description: Id for comment to be commented on 
            schema:
              type: string
        
        responses:
          '200':
            description: Comment succesfully deleted
          '401':
            description: Authentication required
          '403':
            description: Operation not authorized
          '404':
            description: Comment not found
          '500':
            description: Internal server error
      

      patch:
        tags:
          - Comments 
        summary: Edit a comment

        parameters:
          - in: path
            name: commentId
            required: true
            description: Id for comment to be commented on 
            schema:
              type: string
        
        requestBody:
          required: true
          description: Edit comment
          content:
            application/json:
              schema: 
                type: object
                properties:
                  commentText: 
                    type: string 
        
        responses:
          '200':
            description: Comment succesfully edited
          '401':
            description: Authentication required
          '403':
            description: Operation not authorized
          '404':
            description: Comment not found
          '500':
            description: Internal server error        
